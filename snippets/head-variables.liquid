{%- liquid
	assign heading_font = settings.heading_font
	assign heading_font_weight = heading_font.weight

	if settings.heading_font.system? 
		assign heading_font_weight = 500
	endif

	assign body_font = settings.body_font
	assign body_font_500 = body_font | font_modify: 'weight', '500'

	unless body_font_500
		assign body_font_500 = body_font | font_modify: 'weight', '600'
	endunless

	assign body_font_bold = body_font | font_modify: 'weight', '600'
	unless body_font_bold
		assign body_font_bold = body_font | font_modify: 'weight', '700'
	endunless

	assign body_font_italic = body_font | font_modify: 'style', 'italic'
	assign body_font_bold_italic = body_font_bold | font_modify: 'style', 'italic'

	assign color_body_bg = settings.color_body_bg
	assign color_body = settings.color_body
	assign color_heading = settings.color_heading
	assign color_accent = settings.color_accent
	assign color_overlay = settings.color_overlay

	assign color_announcement_bar_text = settings.color_announcement_bar_text
	assign color_announcement_bar_bg = settings.color_announcement_bar_bg

	assign color_header_bg = settings.color_header_bg
	assign color_header_text = settings.color_header_text

	assign color_price = settings.color_price
	assign color_price_discounted = settings.color_price_discounted
	assign color_stars = settings.color_stars

	assign color_inventory_instock = settings.color_inventory_instock
	assign color_inventory_lowstock = settings.color_inventory_lowstock

	assign section_spacing_mobile = settings.section_spacing_mobile
	assign section_spacing_desktop = settings.section_spacing_desktop

	assign color_badge_soldout = settings.color_badge_soldout
	assign color_badge_sale = settings.color_badge_sale
	assign color_badge_preorder = settings.color_badge_preorder
	assign badge_corner_radius = settings.badge_corner_radius

	assign color_footer_text = settings.color_footer_text
	assign color_footer_bg = settings.color_footer_bg
-%}

{% style %}
	{{ body_font | font_face: font_display: 'swap' }}

	{%- if body_font_500 -%}
	  {{ body_font_500 | font_face: font_display: 'swap' }}
	{%- endif -%}

	{%- if body_font_bold -%}
	  {{ body_font_bold | font_face: font_display: 'swap' }}
	{%- endif -%}

	{%- if body_font_italic -%}
	  {{ body_font_italic | font_face: font_display: 'swap' }}
	{%- endif -%}

	{%- if body_font_bold_italic -%}
	  {{ body_font_bold_italic | font_face: font_display: 'swap' }}
	{%- endif -%}

	{{ heading_font | font_face: font_display: 'swap' }}

	h1,h2,h3,h4,h5,h6,
	.h1,.h2,.h3,.h4,.h5,.h6,
	.logolink.text-logo,
	.heading-font,
	.h1-large,
	.customer-addresses .my-address .address-index {
		font-style: {{ heading_font.style }};
		font-weight: {{ heading_font_weight }};
		font-family: {{ heading_font.family }}, {{ heading_font.fallback_families }};
	}
	body,
	.body-font,
	.thb-product-detail .product-title {
		font-style: {{ body_font.style }};
		font-weight: {{ body_font.weight }};
		font-family: {{ body_font.family }}, {{ body_font.fallback_families }};
	}
	:root {
		--mobile-swipe-width: 75vw;
		--grid-width: {{ settings.grid_width | append: 'px'}};
		--grid-width-row: {{ settings.grid_width | plus: 80 | append: 'px' }};
		--font-body-scale: {{ settings.body_font_scale | divided_by: 100.0 }};
		--font-body-line-height-scale: {{ settings.body_font_line_height_scale | divided_by: 100.0 }};
		--font-body-letter-spacing: {{ settings.body_font_letter_spacing | divided_by: 1000.0 }}em;
		--font-body-medium-weight: {{ body_font_500.weight | default: '500' }};
    --font-body-bold-weight: {{ body_font_bold.weight | default: '600' }};
		--font-announcement-scale: {{ settings.announcement_font_scale | divided_by: 100.0 }};
		--font-heading-scale: {{ settings.heading_font_scale | divided_by: 100.0 }};
		--font-heading-line-height-scale: {{ settings.heading_font_line_height_scale | divided_by: 100.0 }};
		--font-heading-letter-spacing: {{ settings.heading_font_letter_spacing | divided_by: 1000.0 }}em;
		--font-navigation-scale: {{ settings.navigation_font_scale | divided_by: 100.0 }};
		--font-product-title-scale: {{ settings.product_title_font_scale | divided_by: 100.0 }};
		--font-product-title-line-height-scale: {{ settings.product_title_line_height_scale | divided_by: 100.0 }};
		--button-letter-spacing: {{ settings.button_letter_spacing | divided_by: 1000.0 }}em;

		--button-border-radius: {{ settings.button_border_radius | default: 3 | append: 'px' }};
		--textarea-border-radius: {{ settings.button_border_radius | default: 3 | at_most: 23 | append: 'px' }};
		--general-border-radius: {{ settings.block_border_radius | default: 3 | append: 'px' }};

		--bg-body: {{ color_body_bg | default: '#fff' }};
		--bg-body-rgb: {{ color_body_bg.rgb | default: '255 255 255' | replace: ' ' , ',' }};
		--bg-body-darken: {{ color_body_bg | default: '#fff' | color_darken: 3 }};
		--payment-terms-background-color: {{ color_body_bg | default: '#fff' }};
		--color-body: {{ color_body | default: '#252525' }};
		--color-body-rgb: {{ color_body.rgb | default: '37 37 37' | replace: ' ' , ',' }};
		--color-border: rgba(var(--color-body-rgb),0.1);
		--color-heading: {{ color_heading | default: '#171717' }};
		--color-heading-rgb: {{ color_heading.rgb | default: '23 23 23' | replace: ' ' , ',' }};
		--color-accent: {{ color_accent | default: '#C33C3C' }};
		--color-accent-rgb: {{ color_accent.rgb | default: '195 60 60' | replace: ' ' , ',' }};
		--color-overlay: {{ color_overlay | default: '#616161' }};
		--color-overlay-rgb: {{ color_overlay.rgb | default: '97 97 97' | replace: ' ' , ',' }};
		--solid-button-background: {{ color_accent | default: '#C33C3C' }};
		--solid-button-background-hover: {{ color_accent | default: '#C33C3C' | color_darken: 7 }};

		--section-spacing-mobile: {{ section_spacing_mobile | default: '15' | append: 'px' }};
		--section-spacing-desktop: {{ section_spacing_desktop | default: '30' | append: 'px' }};

		--color-announcement-bar-text: {{ color_announcement_bar_text | default: '#FFFFFF' }};
		--color-announcement-bar-bg: {{ color_announcement_bar_bg | default: '#252525' }};

		--color-header-bg: {{ color_header_bg | default: '#ffffff' }};
		--color-header-bg-rgb: {{ color_header_bg.rgb | default: '255 255 255' | replace: ' ' , ',' }};
		--color-header-text: {{ color_header_text | default: '#252525' }};
		--color-header-text-rgb: {{ color_header_text.rgb | default: '37 37 37' | replace: ' ' , ',' }};
		--color-header-border: rgba(var(--color-header-text-rgb), 0.1);

		--color-price: {{ color_price | default: '#8D5333' }};
		--color-price-discounted: {{ color_price_discounted | default: '#6D6D6D' }};

		--shopify-accelerated-checkout-button-block-size: 46px;
		--shopify-accelerated-checkout-inline-alignment: center;
		--shopify-accelerated-checkout-skeleton-animation-duration: 0.25s;
		--shopify-accelerated-checkout-button-border-radius: {{ settings.button_border_radius | default: 3 | append: 'px' }};

		{%- if color_stars -%}
			--color-star: {{ color_stars }};
		{%- endif -%}

		{%- if color_inventory_instock -%}
			--color-inventory-instock: {{ color_inventory_instock }};
		{%- endif -%}
		{%- if color_inventory_lowstock -%}
			--color-inventory-lowstock: {{ color_inventory_lowstock }};
		{%- endif -%}

		{%- if color_badge_soldout -%}
			--color-badge-sold-out: {{ color_badge_soldout | color_lighten: 35 }};
			--color-badge-sold-out-text: {{ color_badge_soldout }};
		{%- endif -%}
		{%- if color_badge_sale -%}
			--color-badge-sale: {{ color_badge_sale | color_lighten: 35 }};
			--color-badge-sale-text: {{ color_badge_sale }};
		{%- endif -%}
		{%- if color_badge_preorder -%}
			--color-badge-preorder: {{ color_badge_preorder | color_lighten: 35 }};
			--color-badge-preorder-text: {{ color_badge_preorder }};
		{%- endif -%}

		--color-footer-text: {{ color_footer_text | default: '#252525' }};
		--color-footer-text-rgb: {{ color_footer_text.rgb | default: '37 37 37' | replace: ' ' , ',' }};
		--color-footer-bg: {{ color_footer_bg | default: '#F6F6F6' }};
	}
	{%- for index in (1..4) -%}
		{%- capture tag_settings_key -%}custom_product_badge_group_{{ index }}_tag_names{%- endcapture -%}
		{%- capture color_settings_key -%}custom_product_badge_group_{{ index }}_color{%- endcapture -%}
		{%- unless settings[tag_settings_key] == blank -%}
			{%- assign tags = settings[tag_settings_key] | downcase | split: ", " -%}
			{%- for tag in tags -%}
				.badge.{{ tag | downcase | handleize }}{%- if forloop.last != true -%},{%- endif -%}
			{%- endfor -%}
			{
				--color-badge: {{ settings[color_settings_key] | color_lighten: 35 }};
				--color-badge-text: {{ settings[color_settings_key] }};
			}
		{% endunless %}
	{%- endfor -%}
{% endstyle %}
